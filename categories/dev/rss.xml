<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on blog [dot] hook</title><link>https://blog.hook.sh/categories/dev/</link><description>Recent content in Development on blog [dot] hook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 17 Feb 2022 11:13:55 +0000</lastBuildDate><atom:link href="https://blog.hook.sh/categories/dev/rss.xml" rel="self" type="application/rss+xml"/><item><title>Вопросы и ответы для собеседования по теме "DevOps и деплой"</title><link>https://blog.hook.sh/interview-section-devops/</link><pubDate>Thu, 17 Feb 2022 11:13:55 +0000</pubDate><guid>https://blog.hook.sh/interview-section-devops/</guid><description>&lt;p>&lt;em>WIP&lt;/em>&lt;/p></description></item><item><title>Вопросы и ответы для собеседования - сети</title><link>https://blog.hook.sh/interview-section-network/</link><pubDate>Mon, 14 Feb 2022 12:37:08 +0000</pubDate><guid>https://blog.hook.sh/interview-section-network/</guid><description>&lt;p>Часто на интервью задают вопросы связанные не только с основным/дополнительным ЯП или СУБД, но и с тем, как приложения взаимодействуют между собой используя сетевую коммуникацию. Для понимания того, как эти шестерёнки вращаются и что нужно иметь в виду отвечая на вопросы из этой серии и была написана эта заметка.&lt;/p></description></item><item><title>Отключаем кэширование загружаемых RequireJS файлов при разработке</title><link>https://blog.hook.sh/disable-cacheing-requirejs-files-while-develop/</link><pubDate>Sun, 19 Feb 2017 19:16:00 +0000</pubDate><guid>https://blog.hook.sh/disable-cacheing-requirejs-files-while-develop/</guid><description>&lt;p>Мне нравится &lt;a class="link" href="http://requirejs.org/" target="_blank" rel="noopener"
>RequireJS&lt;/a>. Нравятся принцип построения приложения с его использованием, то как он работает с зависимостями, его гибкость и настраиваемость. Но часто может возникать проблема при разработке на локале - кэширование ресурсов браузером &lt;em>(файл подправил, а изменения не отображаются, так как файл берется из кэша)&lt;/em>.&lt;/p>
&lt;p>Можно, конечно, открыть консоль и поставить флаг запрещающий кэширование, можно подправить конфиг web-демона так, чтоб он запрещал кэширование, а можно пойти другим путем - заставить requirejs добавлять рандомный параметр к своим запросам, таким образом заставляя браузер не брать файл из кэша.&lt;/p></description></item><item><title>Синглтон для RequireJS</title><link>https://blog.hook.sh/requirejs-singletone/</link><pubDate>Sat, 18 Feb 2017 05:19:58 +0000</pubDate><guid>https://blog.hook.sh/requirejs-singletone/</guid><description>&lt;p>Частенько при разработке приложения с использованием &lt;a class="link" href="http://requirejs.org/" target="_blank" rel="noopener"
>requirejs&lt;/a> возникает необходимость в реализации &lt;a class="link" href="https://ru.wikipedia.org/wiki/%D0%9E%D0%B4%D0%B8%D0%BD%D0%BE%D1%87%D0%BA%D0%B0_%28%D1%88%D0%B0%D0%B1%D0%BB%D0%BE%D0%BD_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F%29" target="_blank" rel="noopener"
>паттерна синглтона&lt;/a>. И вот, испробовав пример его реализации что описан ниже заявляю - он имеет право на жизнь. Не без своих недостатков, разумеется, но в целом вполне применибельно:&lt;/p></description></item></channel></rss>